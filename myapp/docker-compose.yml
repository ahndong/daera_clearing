# /myapp/docker-compose.yml

version: "3.8"

services:
  db:
    build:
      context: ./docker_db
      args:
        POSTGRES_DB_ARG: ${${ENV}_POSTGRES_DB}
        POSTGRES_USER_ARG: ${${ENV}_POSTGRES_USER}
        POSTGRES_PASSWORD_ARG: ${${ENV}_POSTGRES_PASSWORD}
    ports:
      - "${${ENV}_POSTGRES_PORT}:${${ENV}_POSTGRES_PORT}"
    env_file:
      - .env_total

  backend:
    build:
      context: ./docker_backend
      args:
        POSTGRES_DB_ARG: ${${ENV}_POSTGRES_DB}
        POSTGRES_USER_ARG: ${${ENV}_POSTGRES_USER}
        POSTGRES_PASSWORD_ARG: ${${ENV}_POSTGRES_PASSWORD}
        POSTGRES_ENDPOINT_ARG: ${${ENV}_POSTGRES_ENDPOINT}
    ports:
      - "8000:8000"
    env_file:
      - .env_total
    depends_on:
      - db

  # frontend:
  #   build:
  #     context: ./docker_frontend
  #     args:
  #       BACKEND_ENDPOINT_ARG: ${${ENV}_BACKEND_ENDPOINT}
  #   env_file:
  #     - .env_total
  #   depends_on:
  #     - backend
  #
  #
  #
  #
  #
# # 아래와 같이 cmd로 실행할 때에 ENV를 지정해서 실행해야 한다.
# ENV=LOCAL docker-compose up
#         or
# export ENV=local/
# docker-compose up
#
#
